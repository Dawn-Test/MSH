{"name": "test_home_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <script.test_empower.TestEmpower object at 0x000001A15C9B4580>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_home_page(self):\n>       self.home_proxy.go_my_empower()\n\nscript\\test_empower.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\home_page.py:69: in go_my_empower\n    self.home_handle.click_empower()\npage\\home_page.py:49: in click_empower\n    self.home_page.find_empower().click()\npage\\home_page.py:29: in find_empower\n    return self.get_element(self.empower)\nbase\\base.py:15: in get_element\n    element = wait.until(lambda x: x.find_element(*location))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"eb52ad9c2c792c80591e111a45f2b3e1\")>\nmethod = <function BasePage.get_element.<locals>.<lambda> at 0x000001A15C9C0310>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python3.8\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "点击预授权预约", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"d:\\python3.8\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\PythonTest\\MSH\\page\\home_page.py\", line 49, in click_empower\n    self.home_page.find_empower().click()\n  File \"D:\\PythonTest\\MSH\\page\\home_page.py\", line 29, in find_empower\n    return self.get_element(self.empower)\n  File \"D:\\PythonTest\\MSH\\base\\base.py\", line 15, in get_element\n    element = wait.until(lambda x: x.find_element(*location))\n  File \"d:\\python3.8\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1640934617671, "stop": 1640934627750}], "start": 1640934617671, "stop": 1640934627756, "uuid": "1107046f-c20c-4450-8187-351d3f344d47", "historyId": "9000f31b48430b8e7fdbbad7040f2082", "testCaseId": "3062f0159c584ec4e3bb2602a758559f", "fullName": "script.test_empower.TestEmpower#test_home_page", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "run(order=2)"}, {"name": "parentSuite", "value": "script"}, {"name": "suite", "value": "test_empower"}, {"name": "subSuite", "value": "TestEmpower"}, {"name": "host", "value": "L613"}, {"name": "thread", "value": "23232-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "script.test_empower"}]}