{
  "uid" : "ea4f6caa58a17471",
  "name" : "test_appointment",
  "fullName" : "script.test_appointment.TestAppointment#test_appointment",
  "historyId" : "c5c686b918c4be2e55c65bdf28856a6b",
  "time" : {
    "start" : 1628840625129,
    "stop" : 1628840648433,
    "duration" : 23304
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <script.test_appointment.TestAppointment object at 0x0000027C90E82B20>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_appointment(self):\n        self.appointment_proxy.go_appointment()\n>       success = self.appointment_proxy.appointment_handle.get_success_msg()\n\nscript\\test_appointment.py:54: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\appointment_page.py:233: in get_success_msg\n    return self.appointment_page.find_success().text\npage\\appointment_page.py:144: in find_success\n    return self.get_element(self.success)\nbase\\base.py:15: in get_element\n    element = wait.until(lambda x: x.find_element(*location))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a89e463e9d706ced705aa736365d254c\")>, method = <function BasePage.get_element.<locals>.<lambda> at 0x0000027C90EA73A0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python3.8\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "xunit_setup_class_fixture_TestAppointment",
    "time" : {
      "start" : 1628840616478,
      "stop" : 1628840621844,
      "duration" : 5366
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "afterStages" : [ {
    "name" : "xunit_setup_class_fixture_TestAppointment::0",
    "time" : {
      "start" : 1628840648564,
      "stop" : 1628840651104,
      "duration" : 2540
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "script"
  }, {
    "name" : "suite",
    "value" : "test_appointment"
  }, {
    "name" : "subSuite",
    "value" : "TestAppointment"
  }, {
    "name" : "host",
    "value" : "L613"
  }, {
    "name" : "thread",
    "value" : "19896-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "script.test_appointment"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "ea4f6caa58a17471.json",
  "parameterValues" : [ ]
}